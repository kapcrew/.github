name: Move to Next Iteration

on:
  # –ó–∞–ø—É—Å–∫ –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å GitHub Actions
  workflow_dispatch:
    inputs:
      source_milestone:
        description: '–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: Sprint 1)'
        required: true
        type: string
      target_milestone:
        description: '–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: Sprint 2)'
        required: true
        type: string
      add_comment:
        description: '–î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—ã–º –∑–∞–¥–∞—á–∞–º?'
        required: false
        type: boolean
        default: true
  
  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  # schedule:
  #   - cron: '0 9 * * 1'  # –ö–∞–∂–¥—ã–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –≤ 9:00 UTC

jobs:
  move-issues:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: –ü–µ—Ä–µ–Ω–æ—Å –Ω–µ–∑–∞–∫—Ä—ã—Ç—ã—Ö –∑–∞–¥–∞—á –º–µ–∂–¥—É milestone
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const sourceMilestoneName = '${{ github.event.inputs.source_milestone }}';
            const targetMilestoneName = '${{ github.event.inputs.target_milestone }}';
            const addComment = '${{ github.event.inputs.add_comment }}' === 'true';
            
            console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ–Ω–æ—Å –∑–∞–¥–∞—á');
            console.log(`üì§ –ò—Å—Ç–æ—á–Ω–∏–∫: "${sourceMilestoneName}"`);
            console.log(`üì• –¶–µ–ª—å: "${targetMilestoneName}"`);
            console.log(`üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: ${addComment ? '–î–∞' : '–ù–µ—Ç'}`);
            console.log('---');
            
            // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö milestone
            const { data: milestones } = await github.rest.issues.listMilestones({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'all',
              per_page: 100
            });
            
            console.log(`üìã –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ milestone: ${milestones.length}`);
            
            // –ù–∞—Ö–æ–¥–∏–º –∏—Å—Ö–æ–¥–Ω—ã–π milestone
            const sourceMilestone = milestones.find(m => m.title === sourceMilestoneName);
            if (!sourceMilestone) {
              core.setFailed(`‚ùå Milestone "${sourceMilestoneName}" –Ω–µ –Ω–∞–π–¥–µ–Ω`);
              return;
            }
            console.log(`‚úÖ –ù–∞–π–¥–µ–Ω –∏—Å—Ö–æ–¥–Ω—ã–π milestone: #${sourceMilestone.number} (${sourceMilestone.open_issues} –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∑–∞–¥–∞—á)`);
            
            // –ù–∞—Ö–æ–¥–∏–º —Ü–µ–ª–µ–≤–æ–π milestone
            const targetMilestone = milestones.find(m => m.title === targetMilestoneName);
            if (!targetMilestone) {
              core.setFailed(`‚ùå Milestone "${targetMilestoneName}" –Ω–µ –Ω–∞–π–¥–µ–Ω`);
              return;
            }
            console.log(`‚úÖ –ù–∞–π–¥–µ–Ω —Ü–µ–ª–µ–≤–æ–π milestone: #${targetMilestone.number}`);
            console.log('---');
            
            // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ issues –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ milestone
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              milestone: sourceMilestone.number,
              state: 'open',
              per_page: 100
            });
            
            // –§–∏–ª—å—Ç—Ä—É–µ–º pull requests (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ issues)
            const actualIssues = issues.filter(issue => !issue.pull_request);
            
            console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–¥–∞—á –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞: ${actualIssues.length}`);
            
            if (actualIssues.length === 0) {
              console.log('‚ú® –ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∑–∞–¥–∞—á –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞');
              return;
            }
            
            console.log('---');
            
            let movedCount = 0;
            let errorCount = 0;
            const movedIssues = [];
            
            // –ü–µ—Ä–µ–Ω–æ—Å–∏–º –∫–∞–∂–¥—É—é –∑–∞–¥–∞—á—É
            for (const issue of actualIssues) {
              try {
                // –û–±–Ω–æ–≤–ª—è–µ–º milestone
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  milestone: targetMilestone.number
                });
                
                // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ)
                if (addComment) {
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue.number,
                    body: `üîÑ –ó–∞–¥–∞—á–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –∏–∑ milestone **"${sourceMilestoneName}"** –≤ **"${targetMilestoneName}"**\n\n_–î–∞—Ç–∞ –ø–µ—Ä–µ–Ω–æ—Å–∞: ${new Date().toLocaleString('ru-RU')}_`
                  });
                }
                
                movedCount++;
                movedIssues.push({
                  number: issue.number,
                  title: issue.title,
                  url: issue.html_url
                });
                console.log(`‚úÖ #${issue.number}: ${issue.title}`);
                
              } catch (error) {
                errorCount++;
                console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–Ω–æ—Å–µ #${issue.number}: ${error.message}`);
              }
            }
            
            console.log('---');
            console.log(`üìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–µ—Ä–µ–Ω–æ—Å–∞:`);
            console.log(`   ‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ: ${movedCount}`);
            console.log(`   ‚ùå –û—à–∏–±–æ–∫: ${errorCount}`);
            console.log(`   üìä –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${actualIssues.length}`);
            
            // –°–æ–∑–¥–∞–µ–º issue —Å –æ—Ç—á–µ—Ç–æ–º (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            if (movedCount > 0) {
              let reportBody = `## üìã –û—Ç—á–µ—Ç –æ –ø–µ—Ä–µ–Ω–æ—Å–µ –∑–∞–¥–∞—á\n\n`;
              reportBody += `**–ò—Å—Ç–æ—á–Ω–∏–∫:** ${sourceMilestoneName}\n`;
              reportBody += `**–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:** ${targetMilestoneName}\n`;
              reportBody += `**–î–∞—Ç–∞:** ${new Date().toLocaleString('ru-RU')}\n\n`;
              reportBody += `### ‚úÖ –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ –∑–∞–¥–∞—á: ${movedCount}\n\n`;
              
              // –°–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
              for (const issue of movedIssues) {
                reportBody += `- #${issue.number} - [${issue.title}](${issue.url})\n`;
              }
              
              if (errorCount > 0) {
                reportBody += `\n### ‚ö†Ô∏è –û—à–∏–±–æ–∫ –ø—Ä–∏ –ø–µ—Ä–µ–Ω–æ—Å–µ: ${errorCount}\n`;
              }
              
              try {
                await github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: `üîÑ –û—Ç—á–µ—Ç: ${sourceMilestoneName} ‚Üí ${targetMilestoneName}`,
                  body: reportBody,
                  labels: ['automation', 'report']
                });
                console.log('üìù –°–æ–∑–¥–∞–Ω –æ—Ç—á–µ—Ç –æ –ø–µ—Ä–µ–Ω–æ—Å–µ');
              } catch (error) {
                console.error(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç: ${error.message}`);
              }
            }
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º outputs –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —à–∞–≥–∞—Ö
            core.setOutput('moved_count', movedCount);
            core.setOutput('error_count', errorCount);
            
            console.log('---');
            console.log('üéâ –ü–µ—Ä–µ–Ω–æ—Å –∑–∞–≤–µ—Ä—à–µ–Ω!');
      
      - name: –ò—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        run: |
          echo "‚ú® Workflow –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
          echo "üìä –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ –∑–∞–¥–∞—á: ${{ steps.move-issues.outputs.moved_count }}"
